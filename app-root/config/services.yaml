# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  orderInputPath: '%env(ORDER_INFO_PATH)%'
  defaultCurrency: 'USD'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

# NDJSON is another alternative to JSONL for managing newline separated json data streams
  Sunaoka\Ndjson\NDJSON:
    class: \Sunaoka\Ndjson\NDJSON
    arguments:
      $filename: '%orderInputPath%'

# It is a good practice to use an exclusive money management library for real world approach.
  App\Service\Money\MoneyParser:
    class: App\Service\Money\MoneyParser
    arguments:
      $currency: '%defaultCurrency%'

  App\Service\Money\MoneyCompute:
    class: App\Service\Money\MoneyCompute
    arguments:
      $moneyParser: '@App\Service\Money\MoneyParser'
      $currency: '%defaultCurrency%'


  App\Service\Parser\OrderParserInterface: '@App\Service\Parser\OrderJSONLParser'
